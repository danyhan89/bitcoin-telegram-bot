c
balance["data"]["available_balance"].to_d
balance["data"]["available_balance"].to_decimal
balance["data"]["available_balance"]
balance["data"]
balance
c
@data
c
@data
c
@data
c
@data
c
exit
collect_and_validate_address(message) if !has_address?(id) && requesting_address?(id)
request_address(message) if !has_address?(id) && !requesting_address?(id)
create_user(id) if !user_exists?(id)
id = message.chat.id
c
request_address(message) if !has_address?(id) && !requesting_address?(id) 
create_user(id) if !user_exists?(id)
id = message.chat.id
c
collect_and_validate_address(message) if !has_address?(id) && requesting_address?(id)
requesting_address?(id)
equesting_address?(id)
!requesting_address?(id)
create_user(id) if !user_exists?(id)
!user_exists?(id)
id = message.chat.id
c
request_address(message) if !has_address?(id) && !requesting_address?(id)
create_user(id) if !user_exists?(id)
id = message.chat.id
exit
request_address(message) if !has_address?(id) && !requesting_address?(id) 
create_user(id) if !user_exists?(id)
id = message.chat.id
exit
@data
create_user(id) if !user_exists?(id) and return
id = message.chat.id
c
@data
create_user(id)
exit
create_user
@data
!user_exists?(message.chat.id)
message.chat.id
message.chat
message
